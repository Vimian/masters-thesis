services:
  benchmark:
    build:
      context: .
      dockerfile: cmd/benchmark/Dockerfile
    environment:
      # minio
      MINIO_SERVER: ${MINIO_SERVER}
      MINIO_ACCESS_KEY: ${MINIO_ACCESS_KEY}
      MINIO_SECRET_KEY: ${MINIO_SECRET_KEY}
      MINIO_SECURE: ${MINIO_SECURE}
      MINIO_BUCKET: ${MINIO_BUCKET}
      MINIO_ORIGINAL_PATH: ${MINIO_ORIGINAL_PATH}
      MINIO_COMPRESSED_PATH: ${MINIO_COMPRESSED_PATH}
      MINIO_DECOMPRESSED_PATH: ${MINIO_DECOMPRESSED_PATH}
      # postgres
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_HOST: ${POSTGRES_HOST}
      POSTGRES_PORT: ${POSTGRES_PORT}
      POSTGRES_DATABASE: ${POSTGRES_DATABASE}
      # benchmark
      RUNS: ${RUNS}
    depends_on:
      - rscript
      - minio-init
      - analytics
      - cloud-benchmark
    networks:
      - internal_network
    deploy:
      resources:
        limits:
          cpus: "1"
          memory: 2048M
        reservations:
          cpus: "1"
          memory: 2048M

  cloud-benchmark:
    build:
      context: .
      dockerfile: cmd/cloud-benchmark/Dockerfile
    environment:
      # postgres
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_HOST: ${POSTGRES_HOST}
      POSTGRES_PORT: ${POSTGRES_PORT}
      POSTGRES_DATABASE: ${POSTGRES_DATABASE}
      # benchmark
      RUNS: ${RUNS_CLOUD}
      # cloud keys
      MA_PREMIUM_TIER: ${MA_PREMIUM_TIER}
      MA_HOT_TIER: ${MA_HOT_TIER}
      MA_COOL_TIER: ${MA_COOL_TIER}
      MA_COLD_TIER: ${MA_COLD_TIER}
    volumes:
      - ./persistence/minio/original:/files
      - ./downloads:/downloads
    networks:
      - internal_network
      - external_network

  minio:
    image: minio/minio:RELEASE.2025-02-07T23-21-09Z
    ports:
      - "9001:9001" # TODO: REMOVE IF NOT NEEDED - WebUI
    environment:
      - MINIO_ROOT_USER=${MINIO_ACCESS_KEY}
      - MINIO_ROOT_PASSWORD=${MINIO_SECRET_KEY}
    volumes:
      - minio-data:/data
    command: server /data --console-address ":9001" # TODO: REMOVE IF NOT NEEDED - WebUI - ONLY THE --console-address ":9001"
    depends_on:
      - benchmark
    networks:
      - internal_network
      - external_network

  minio-init:
    image: minio/mc:RELEASE.2025-02-08T19-14-21Z
    environment:
      - MINIO_ROOT_USER=${MINIO_ACCESS_KEY}
      - MINIO_ROOT_PASSWORD=${MINIO_SECRET_KEY}
      - MINIO_SERVER=${MINIO_SERVER}
    volumes:
      - ./persistence/minio:/minio
    entrypoint: ["/bin/sh", "/minio/init.sh"]
    networks:
      - internal_network

  postgres:
    image: postgres:17.3
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DATABASE}
    ports: # TODO: REMOVE IF NOT NEEDED - ONLY FOR VISUALIZATION
      - "5432:5432" # ONLY FOR VISUALIZATION
    volumes:
      - ./persistence/postgres/init.sql:/docker-entrypoint-initdb.d/init.sql
      - postgres-data:/var/lib/postgresql/data
    networks:
      - internal_network
    depends_on:
      - benchmark

  rscript:
    build:
      context: .
      dockerfile: visual/Dockerfile
    volumes:
      - ./visual/scripts:/visual/scripts
      - ./visual/data:/visual/data
    networks:
      - internal_network

  analytics:
    build:
      context: .
      dockerfile: cmd/analytics/Dockerfile
    environment:
      # minio
      MINIO_SERVER: ${MINIO_SERVER}
      MINIO_ACCESS_KEY: ${MINIO_ACCESS_KEY}
      MINIO_SECRET_KEY: ${MINIO_SECRET_KEY}
      MINIO_SECURE: ${MINIO_SECURE}
      MINIO_BUCKET: ${MINIO_BUCKET}
      MINIO_ORIGINAL_PATH: ${MINIO_ORIGINAL_PATH}
      # postgres
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_HOST: ${POSTGRES_HOST}
      POSTGRES_PORT: ${POSTGRES_PORT}
      POSTGRES_DATABASE: ${POSTGRES_DATABASE}
    networks:
      - internal_network

  # TODO: REMOVE IF NOT NEEDED - ONLY FOR DATABASE DEBUGGING
  adminer:
    image: adminer:4.8.1
    ports:
      - "8080:8080"
    networks:
      - internal_network
      - external_network
  # END OF TODO

volumes:
  minio-data:
  postgres-data:

networks:
  internal_network:
    internal: true
  external_network:
